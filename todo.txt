Do:
- command to toggle notifications
- variable expansion format $(varname) as well as $varname

- allow starting proxies from CLI
    command create name remotehost localport remoteport
    make sure name doesn't exist already

- allow stopping proxies from CLI
    command kill [name] - if name empty, kill current and select first
    make sure either always 1 active or some form of fallback is in place if no proxies exist

- add multi parser support
    load from files, reload them smartly (when file changed)
        REF: imp module!
        REF: https://www.geeksforgeeks.org/how-to-dynamically-load-modules-or-classes-in-python/
    reload them even if currently selected proxy doesn't use them
    parser container class that stores the module parser and offers functions to reload
        __init__(moduleName)
        type checking with isinstance()? maybe impossible or only via black magic.
        update getParser functions in application
        update default parser to be base parser
    command loadparser filename
    use core parser if no proxies exist

- make a better check for when to reload the Parser module in application.py

- allow running of scripts from file
    command run file

- allow renaming of proxies
    command rename [newName]
    make sure to also update the name attribute in the proxy itself
    make sure to adjust the keys in all relevant dictionaries
      d[newKey] = d.pop(oldKey)
    make sure that a proxy with that name doesn't exist already

- allow selecting proxies by binding port

- make internal variables and functions private with _
    provide getters and setters with proper checks

Fix:
- Latest command not part of history
- clearhistory <id> not working
- pack/unpack c_string and pascal_string not working right
- no prompt after parser output
